{"version":3,"sources":["../src/vnode.js","../src/h.js","../src/util.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/json-diff.js","../src/we-element.js","../src/render.js","../src/define.js","../src/options.js","../src/tag.js","../src/omi.js"],"names":["VNode","nodeName","attributes","lastSimple","child","simple","i","children","EMPTY_CHILDREN","arguments","length","stack","push","pop","String","p","key","options","vnode","cssToDom","css","node","document","createElement","innerText","npn","str","replace","$","$1","toUpperCase","applyRef","ref","value","current","isArray","obj","Object","prototype","toString","call","nProps","props","result","keys","forEach","isSameNodeType","hydrating","_componentConstructor","removeNode","name","isSvg","old","style","cssText","IS_NON_DIMENSIONAL","test","innerHTML","__html","useCapture","substring","addEventListener","eventProxy","e","removeAttribute","ns","removeAttributeNS","toLowerCase","setAttribute","className","isSvgMode","dom","context","mountAll","ret","idiff","componentRoot","diffLevel","out","splitText","parentNode","_component","nodeValue","createTextNode","replaceChild","recollectNodeTree","vnodeName","createNode","t","vchildren","firstChild","fc","a","nextSibling","innerDiffNode","dangerouslySetInnerHTML","prevSvgMode","min","len","childrenLen","vlen","j","keyedLen","originalChildren","keyed","vchild","_child","__key","trim","isHydrating","c","f","appendChild","unmountOnly","removeChildren","update","attrs","setAccessor","isWeElement","_possibleConstructorReturn","self","ReferenceError","ARRAYTYPE","HTMLElement","type","syncKeys","pre","_diff","rootPreType","currentValue","rootCurrentType","item","index","setResult","path","OBJECTTYPE","preValue","currentType","subKey","k","v","parent","store","originData","deadline","timeRemaining","requestIdleCallback","execTask","querySelector","extendStoreUpate","JSON","parse","stringify","data","render","setTimeout","this","diffResult","diff$1","globalData","instances","instance","jsonDiff","onChange","updateAll","matchGlobalData","updateByPath","indexOf","keyA","needUpdate","includePath","updatePath","keyB","pathA","pathB","next","substr","arr","split","origin","ctor","pure","dataToPath","getUpdatePath","_objToPath","_arrayToPath","target","define","root","global","Math","Array","window","Reflect","customElements","hasOwnProperty","BuiltInHTMLElement","construct","constructor","setPrototypeOf","cb","start","Date","now","didTimeout","max","cancelIdleCallback","id","clearTimeout","Promise","resolve","then","bind","_listeners","WeElement","_this","shadowRoot","mode","install","attachShadow","installed","disconnectedCallback","uninstall","splice","beforeUpdate","diff","host","fire","afterUpdate","CustomEvent","detail","Omi","tag","h"],"mappings":"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","file":"omi.min.js","sourcesContent":["/** Virtual DOM Node */\r\nexport function VNode() {}\r\n","import { VNode } from './vnode'\r\nimport options from './options'\r\n\r\nconst stack = []\r\nconst EMPTY_CHILDREN = []\r\n\r\nexport function h(nodeName, attributes) {\r\n\tlet children = EMPTY_CHILDREN, lastSimple, child, simple, i\r\n\tfor (i = arguments.length; i-- > 2;) {\r\n\t\tstack.push(arguments[i])\r\n\t}\r\n\tif (attributes && attributes.children != null) {\r\n\t\tif (!stack.length) stack.push(attributes.children)\r\n\t\tdelete attributes.children\r\n\t}\r\n\twhile (stack.length) {\r\n\t\tif ((child = stack.pop()) && child.pop !== undefined) {\r\n\t\t\tfor (i = child.length; i--;) stack.push(child[i])\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (typeof child === 'boolean') child = null\r\n\r\n\t\t\tif ((simple = typeof nodeName !== 'function')) {\r\n\t\t\t\tif (child == null) child = ''\r\n\t\t\t\telse if (typeof child === 'number') child = String(child)\r\n\t\t\t\telse if (typeof child !== 'string') simple = false\r\n\t\t\t}\r\n\r\n\t\t\tif (simple && lastSimple) {\r\n\t\t\t\tchildren[children.length - 1] += child\r\n\t\t\t}\r\n\t\t\telse if (children === EMPTY_CHILDREN) {\r\n\t\t\t\tchildren = [child]\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tchildren.push(child)\r\n\t\t\t}\r\n\r\n\t\t\tlastSimple = simple\r\n\t\t}\r\n\t}\r\n\r\n\tlet p = new VNode()\r\n\tp.nodeName = nodeName\r\n\tp.children = children\r\n\tp.attributes = attributes == null ? undefined : attributes\r\n\tp.key = attributes == null ? undefined : attributes.key\r\n\r\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\r\n\tif (options.vnode !== undefined) options.vnode(p)\r\n\r\n\treturn p\r\n}","/**\r\n * @license\r\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n/**\r\n * This shim allows elements written in, or compiled to, ES5 to work on native\r\n * implementations of Custom Elements v1. It sets new.target to the value of\r\n * this.constructor so that the native HTMLElement constructor can access the\r\n * current under-construction element's definition.\r\n */\r\n(function() {\r\n\tif (\r\n\t// No Reflect, no classes, no need for shim because native custom elements\r\n\t// require ES2015 classes or Reflect.\r\n\t\twindow.Reflect === undefined ||\r\n      window.customElements === undefined ||\r\n      // The webcomponentsjs custom elements polyfill doesn't require\r\n      // ES2015-compatible construction (`super()` or `Reflect.construct`).\r\n      window.customElements.hasOwnProperty('polyfillWrapFlushCallback')\r\n\t) {\r\n\t\treturn\r\n\t}\r\n\tconst BuiltInHTMLElement = HTMLElement\r\n\twindow.HTMLElement = function HTMLElement() {\r\n\t\treturn Reflect.construct(BuiltInHTMLElement, [], this.constructor)\r\n\t}\r\n\tHTMLElement.prototype = BuiltInHTMLElement.prototype\r\n\tHTMLElement.prototype.constructor = HTMLElement\r\n\tObject.setPrototypeOf(HTMLElement, BuiltInHTMLElement)\r\n})()\r\n\r\n/*\r\n * @see https://developers.google.com/web/updates/2015/08/using-requestidlecallback\r\n */\r\nwindow.requestIdleCallback = window.requestIdleCallback ||\r\n\tfunction (cb) {\r\n\t\treturn setTimeout(function () {\r\n\t\t\tvar start = Date.now();\r\n\t\t\tcb({\r\n\t\t\t\tdidTimeout: false,\r\n\t\t\t\ttimeRemaining: function () {\r\n\t\t\t\t\treturn Math.max(0, 50 - (Date.now() - start));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, 1);\r\n\t}\r\n\r\nwindow.cancelIdleCallback = window.cancelIdleCallback ||\r\n\tfunction (id) {\r\n\t\tclearTimeout(id);\r\n\t} \r\n\r\nexport function cssToDom(css) {\r\n\tconst node = document.createElement('style')\r\n\tnode.innerText = css\r\n\treturn node\r\n}\r\n\r\n\r\nexport function npn(str) {\r\n\treturn str.replace(/-(\\w)/g, ($, $1) => {\r\n\t\treturn $1.toUpperCase()\r\n\t})\r\n}\r\n\r\nexport function extend(obj, props) {\r\n\tfor (let i in props) obj[i] = props[i]\r\n\treturn obj\r\n}\r\n\r\n/** Invoke or update a ref, depending on whether it is a function or object ref.\r\n *  @param {object|function} [ref=null]\r\n *  @param {any} [value]\r\n */\r\nexport function applyRef(ref, value) {\r\n\tif (ref!=null) {\r\n\t\tif (typeof ref=='function') ref(value)\r\n\t\telse ref.current = value\r\n\t}\r\n}\r\n\r\n/**\r\n * Call a function asynchronously, as soon as possible. Makes\r\n * use of HTML Promise to schedule the callback if available,\r\n * otherwise falling back to `setTimeout` (mainly for IE<11).\r\n * @type {(callback: function) => void}\r\n */\r\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout\r\n\r\nexport function isArray(obj){\r\n\treturn Object.prototype.toString.call(obj) === '[object Array]'\r\n}\r\n\r\nexport function nProps(props){\r\n\tif (!props || isArray(props)) return {}\r\n\tconst result = {}\r\n\tObject.keys(props).forEach(key =>{\r\n\t\tresult[key] = props[key].value\r\n\t})\r\n\treturn result\r\n}\r\n","import { extend } from '../util'\r\n\r\n\r\n/**\r\n * Check if two nodes are equivalent.\r\n *\r\n * @param {Node} node\t\t\tDOM Node to compare\r\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\r\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\r\n * @private\r\n */\r\nexport function isSameNodeType(node, vnode, hydrating) {\r\n\tif (typeof vnode==='string' || typeof vnode==='number') {\r\n\t\treturn node.splitText!==undefined\r\n\t}\r\n\tif (typeof vnode.nodeName==='string') {\r\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName)\r\n\t}\r\n\treturn hydrating || node._componentConstructor===vnode.nodeName\r\n}\r\n\r\n\r\n/**\r\n * Check if an Element has a given nodeName, case-insensitively.\r\n *\r\n * @param {Element} node\tA DOM Element to inspect the name of.\r\n * @param {String} nodeName\tUnnormalized name to compare against.\r\n */\r\nexport function isNamedNode(node, nodeName) {\r\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase()\r\n}\r\n\r\n\r\n/**\r\n * Reconstruct Component-style `props` from a VNode.\r\n * Ensures default/fallback values from `defaultProps`:\r\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\r\n *\r\n * @param {VNode} vnode\r\n * @returns {Object} props\r\n */\r\nexport function getNodeProps(vnode) {\r\n\tlet props = extend({}, vnode.attributes)\r\n\tprops.children = vnode.children\r\n\r\n\tlet defaultProps = vnode.nodeName.defaultProps\r\n\tif (defaultProps!==undefined) {\r\n\t\tfor (let i in defaultProps) {\r\n\t\t\tif (props[i]===undefined) {\r\n\t\t\t\tprops[i] = defaultProps[i]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn props\r\n}\r\n","import { IS_NON_DIMENSIONAL } from '../constants'\r\nimport { applyRef } from '../util'\r\nimport options from '../options'\r\n\r\n/**\r\n * A DOM event listener\r\n * @typedef {(e: Event) => void} EventListner\r\n */\r\n\r\n/**\r\n * A mapping of event types to event listeners\r\n * @typedef {Object.<string, EventListener>} EventListenerMap\r\n */\r\n\r\n/**\r\n * Properties Preact adds to elements it creates\r\n * @typedef PreactElementExtensions\r\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\r\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\r\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\r\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\r\n */\r\n\r\n/**\r\n * A DOM element that has been extended with Preact properties\r\n * @typedef {Element & ElementCSSInlineStyle & PreactElementExtensions} PreactElement\r\n */\r\n\r\n/**\r\n * Create an element with the given nodeName.\r\n * @param {string} nodeName The DOM node to create\r\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\r\n *  namespace.\r\n * @returns {PreactElement} The created DOM node\r\n */\r\nexport function createNode(nodeName, isSvg) {\r\n\t/** @type {PreactElement} */\r\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName)\r\n\tnode.normalizedNodeName = nodeName\r\n\treturn node\r\n}\r\n\r\n\r\n/**\r\n * Remove a child node from its parent if attached.\r\n * @param {Node} node The node to remove\r\n */\r\nexport function removeNode(node) {\r\n\tlet parentNode = node.parentNode\r\n\tif (parentNode) parentNode.removeChild(node)\r\n}\r\n\r\n\r\n/**\r\n * Set a named attribute on the given Node, with special behavior for some names\r\n * and event handlers. If `value` is `null`, the attribute/handler will be\r\n * removed.\r\n * @param {PreactElement} node An element to mutate\r\n * @param {string} name The name/key to set, such as an event or attribute name\r\n * @param {*} old The last value that was set for this name/node pair\r\n * @param {*} value An attribute value, such as a function to be used as an\r\n *  event handler\r\n * @param {boolean} isSvg Are we currently diffing inside an svg?\r\n * @private\r\n */\r\nexport function setAccessor(node, name, old, value, isSvg) {\r\n\tif (name==='className') name = 'class'\r\n\r\n\r\n\tif (name==='key') {\r\n\t\t// ignore\r\n\t}\r\n\telse if (name==='ref') {\r\n\t\tapplyRef(old, null)\r\n\t\tapplyRef(value, node)\r\n\t}\r\n\telse if (name==='class' && !isSvg) {\r\n\t\tnode.className = value || ''\r\n\t}\r\n\telse if (name==='style') {\r\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\r\n\t\t\tnode.style.cssText = value || ''\r\n\t\t}\r\n\t\tif (value && typeof value==='object') {\r\n\t\t\tif (typeof old!=='string') {\r\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = ''\r\n\t\t\t}\r\n\t\t\tfor (let i in value) {\r\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (name==='dangerouslySetInnerHTML') {\r\n\t\tif (value) node.innerHTML = value.__html || ''\r\n\t}\r\n\telse if (name[0]=='o' && name[1]=='n') {\r\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''))\r\n\t\tname = name.toLowerCase().substring(2)\r\n\t\tif (value) {\r\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture)\r\n\t\t}\r\n\t\t(node._listeners || (node._listeners = {}))[name] = value\r\n\t}\r\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\r\n\t\t// Attempt to set a DOM property to the given value.\r\n\t\t// IE & FF throw for certain property-value combinations.\r\n\t\ttry {\r\n\t\t\tnode[name] = value==null ? '' : value\r\n\t\t} catch (e) { }\r\n\t\tif ((value==null || value===false) && name!='spellcheck') node.removeAttribute(name)\r\n\t}\r\n\telse {\r\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')))\r\n\t\t// spellcheck is treated differently than all other boolean values and\r\n\t\t// should not be removed when the value is `false`. See:\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\r\n\t\tif (value==null || value===false) {\r\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase())\r\n\t\t\telse node.removeAttribute(name)\r\n\t\t}\r\n\t\telse if (typeof value === 'string') {\r\n\t\t\tif (ns) {\r\n\t\t\t\tnode.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value)\r\n\t\t\t} else {\r\n\t\t\t\tnode.setAttribute(name, value)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Proxy an event to hooked event handlers\r\n * @param {Event} e The event object from the browser\r\n * @private\r\n */\r\nfunction eventProxy(e) {\r\n\treturn this._listeners[e.type](options.event && options.event(e) || e)\r\n}","import { ATTR_KEY } from '../constants'\r\nimport { isSameNodeType, isNamedNode } from './index'\r\nimport { createNode, setAccessor } from '../dom/index'\r\nimport {  npn } from '../util'\r\nimport { removeNode } from '../dom/index'\r\n\r\n/** Queue of components that have been mounted and are awaiting componentDidMount */\r\nexport const mounts = []\r\n\r\n/** Diff recursion count, used to track the end of the diff cycle. */\r\nexport let diffLevel = 0\r\n\r\n/** Global flag indicating if the diff is currently within an SVG */\r\nlet isSvgMode = false\r\n\r\n/** Global flag indicating if the diff is performing hydration */\r\nlet hydrating = false\r\n\r\n\r\n\r\n\r\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\r\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\r\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\r\n *\t@returns {Element} dom\t\t\tThe created/mutated element\r\n *\t@private\r\n */\r\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\r\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\r\n\tif (!diffLevel++) {\r\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\r\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined\r\n\r\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\r\n\t\thydrating = dom!=null && !(ATTR_KEY in dom)\r\n\t}\r\n\r\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot)\r\n\r\n\t// append the element if its a new parent\r\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret)\r\n\r\n\t// diffLevel being reduced to 0 means we're exiting the diff\r\n\tif (!--diffLevel) {\r\n\t\thydrating = false\r\n\t\t// invoke queued componentDidMount lifecycle methods\r\n\t\t\r\n\t}\r\n\r\n\treturn ret\r\n}\r\n\r\n\r\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\r\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\r\n\tlet out = dom,\r\n\t\tprevSvgMode = isSvgMode\r\n\r\n\t// empty values (null, undefined, booleans) render as empty Text nodes\r\n\tif (vnode==null || typeof vnode==='boolean') vnode = ''\r\n\r\n\r\n\t// Fast case: Strings & Numbers create/update Text nodes.\r\n\tif (typeof vnode==='string' || typeof vnode==='number') {\r\n\r\n\t\t// update if it's already a Text node:\r\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\r\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\r\n\t\t\tif (dom.nodeValue!=vnode) {\r\n\t\t\t\tdom.nodeValue = vnode\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\r\n\t\t\tout = document.createTextNode(vnode)\r\n\t\t\tif (dom) {\r\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom)\r\n\t\t\t\trecollectNodeTree(dom, true)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tout[ATTR_KEY] = true\r\n\r\n\t\treturn out\r\n\t}\r\n\r\n\r\n\t// If the VNode represents a Component, perform a component diff:\r\n\tlet vnodeName = vnode.nodeName\r\n\t\r\n\r\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\r\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode\r\n\r\n\r\n\t// If there's no existing element or it's the wrong type, create a new one:\r\n\tvnodeName = String(vnodeName)\r\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\r\n\t\tout = createNode(vnodeName, isSvgMode)\r\n\r\n\t\tif (dom) {\r\n\t\t\t// move children into the replacement node\r\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild)\r\n\r\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\r\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom)\r\n\r\n\t\t\t// recycle the old element (skips non-Element node types)\r\n\t\t\trecollectNodeTree(dom, true)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tlet fc = out.firstChild,\r\n\t\tprops = out[ATTR_KEY],\r\n\t\tvchildren = vnode.children\r\n\r\n\tif (props==null) {\r\n\t\tprops = out[ATTR_KEY] = {}\r\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value\r\n\t}\r\n\r\n\t// Optimization: fast-path for elements containing a single TextNode:\r\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\r\n\t\tif (fc.nodeValue!=vchildren[0]) {\r\n\t\t\tfc.nodeValue = vchildren[0]\r\n\t\t}\r\n\t}\r\n\t// otherwise, if there are existing or new children, diff them:\r\n\telse if (vchildren && vchildren.length || fc!=null) {\r\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null)\r\n\t}\r\n\r\n\r\n\t// Apply attributes/props from VNode to the DOM Element:\r\n\tdiffAttributes(out, vnode.attributes, props)\r\n\r\n\r\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\r\n\tisSvgMode = prevSvgMode\r\n\r\n\treturn out\r\n}\r\n\r\n\r\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\r\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\r\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\r\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\r\n *\t@param {Boolean} mountAll\r\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\r\n */\r\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\r\n\tlet originalChildren = dom.childNodes,\r\n\t\tchildren = [],\r\n\t\tkeyed = {},\r\n\t\tkeyedLen = 0,\r\n\t\tmin = 0,\r\n\t\tlen = originalChildren.length,\r\n\t\tchildrenLen = 0,\r\n\t\tvlen = vchildren ? vchildren.length : 0,\r\n\t\tj, c, f, vchild, child\r\n\r\n\t// Build up a map of keyed children and an Array of unkeyed children:\r\n\tif (len!==0) {\r\n\t\tfor (let i=0; i<len; i++) {\r\n\t\t\tlet child = originalChildren[i],\r\n\t\t\t\tprops = child[ATTR_KEY],\r\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null\r\n\t\t\tif (key!=null) {\r\n\t\t\t\tkeyedLen++\r\n\t\t\t\tkeyed[key] = child\r\n\t\t\t}\r\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\r\n\t\t\t\tchildren[childrenLen++] = child\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (vlen!==0) {\r\n\t\tfor (let i=0; i<vlen; i++) {\r\n\t\t\tvchild = vchildren[i]\r\n\t\t\tchild = null\r\n\r\n\t\t\t// attempt to find a node based on key matching\r\n\t\t\tlet key = vchild.key\r\n\t\t\tif (key!=null) {\r\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\r\n\t\t\t\t\tchild = keyed[key]\r\n\t\t\t\t\tkeyed[key] = undefined\r\n\t\t\t\t\tkeyedLen--\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// attempt to pluck a node of the same type from the existing children\r\n\t\t\telse if (!child && min<childrenLen) {\r\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\r\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\r\n\t\t\t\t\t\tchild = c\r\n\t\t\t\t\t\tchildren[j] = undefined\r\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--\r\n\t\t\t\t\t\tif (j===min) min++\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\r\n\t\t\tchild = idiff(child, vchild, context, mountAll)\r\n\r\n\t\t\tf = originalChildren[i]\r\n\t\t\tif (child && child!==dom && child!==f) {\r\n\t\t\t\tif (f==null) {\r\n\t\t\t\t\tdom.appendChild(child)\r\n\t\t\t\t}\r\n\t\t\t\telse if (child===f.nextSibling) {\r\n\t\t\t\t\tremoveNode(f)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdom.insertBefore(child, f)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// remove unused keyed children:\r\n\tif (keyedLen) {\r\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false)\r\n\t}\r\n\r\n\t// remove orphaned unkeyed children:\r\n\twhile (min<=childrenLen) {\r\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false)\r\n\t}\r\n}\r\n\r\n\r\n\r\n/** Recursively recycle (or just unmount) a node and its descendants.\r\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\r\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\r\n */\r\nexport function recollectNodeTree(node, unmountOnly) {\r\n\t\r\n\t// If the node's VNode had a ref function, invoke it with null here.\r\n\t// (this is part of the React spec, and smart for unsetting references)\r\n\tif (node[ATTR_KEY]!=null && node[ATTR_KEY].ref) node[ATTR_KEY].ref(null)\r\n\r\n\tif (unmountOnly===false || node[ATTR_KEY]==null) {\r\n\t\tremoveNode(node)\r\n\t}\r\n\r\n\tremoveChildren(node)\r\n\r\n}\r\n\r\n\r\n/** Recollect/unmount all children.\r\n *\t- we use .lastChild here because it causes less reflow than .firstChild\r\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\r\n */\r\nexport function removeChildren(node) {\r\n\tnode = node.lastChild\r\n\twhile (node) {\r\n\t\tlet next = node.previousSibling\r\n\t\trecollectNodeTree(node, true)\r\n\t\tnode = next\r\n\t}\r\n}\r\n\r\n\r\n/** Apply differences in attributes from a VNode to the given DOM Element.\r\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\r\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\r\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\r\n */\r\nfunction diffAttributes(dom, attrs, old) {\r\n\tlet name\r\n\tlet update  = false\r\n\tlet isWeElement = dom.update\r\n\t// remove attributes no longer present on the vnode by setting them to undefined\r\n\tfor (name in old) {\r\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\r\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode)\r\n\t\t\tif (isWeElement){\r\n\t\t\t\tdelete dom.props[name]\r\n\t\t\t\tupdate = true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t// add new & update changed attributes\r\n\tfor (name in attrs) {\r\n\t\t//diable when using store system?\r\n\t\t//!dom.store &&\r\n\t\tif (isWeElement && typeof attrs[name] === 'object'){\r\n\t\t\tdom.props[npn(name)] = attrs[name]\r\n\t\t\tupdate = true\r\n\t\t} else if (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\r\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode)\r\n\t\t\tif (isWeElement) {\r\n\t\t\t\tdom.props[npn(name)] = attrs[name]\r\n\t\t\t\tupdate = true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t(dom.parentNode && update && isWeElement) && dom.update()\r\n}\r\n","const ARRAYTYPE = '[object Array]'\r\nconst OBJECTTYPE = '[object Object]'\r\nconst FUNCTIONTYPE = '[object Function]'\r\n\r\nexport default function diff(current, pre) {\r\n    const result = {}\r\n    syncKeys(current, pre)\r\n    _diff(current, pre, '', result)\r\n    return result\r\n}\r\n\r\nfunction syncKeys(current, pre) {\r\n    if (current === pre) return\r\n    const rootCurrentType = type(current)\r\n    const rootPreType = type(pre)\r\n    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {\r\n        if(Object.keys(current).length >= Object.keys(pre).length){\r\n            for (let key in pre) {\r\n                const currentValue = current[key]\r\n                if (currentValue === undefined) {\r\n                    current[key] = null\r\n                } else {\r\n                    syncKeys(currentValue, pre[key])\r\n                }\r\n            }\r\n        }\r\n    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {\r\n        if (current.length >= pre.length) {\r\n            pre.forEach((item, index) => {\r\n                syncKeys(current[index], item)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nfunction _diff(current, pre, path, result) {\r\n    if (current === pre) return\r\n    const rootCurrentType = type(current)\r\n    const rootPreType = type(pre)\r\n    if (rootCurrentType == OBJECTTYPE) {\r\n        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {\r\n            setResult(result, path, current)\r\n        } else {\r\n            for (let key in current) {\r\n                const currentValue = current[key]\r\n                const preValue = pre[key]\r\n                const currentType = type(currentValue)\r\n                const preType = type(preValue)\r\n                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {\r\n                    if (currentValue != pre[key]) {\r\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue)\r\n                    }\r\n                } else if (currentType == ARRAYTYPE) {\r\n                    if (preType != ARRAYTYPE) {\r\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue)\r\n                    } else {\r\n                        if (currentValue.length < preValue.length) {\r\n                            setResult(result, (path == '' ? '' : path + \".\") + key, currentValue)\r\n                        } else {\r\n                            currentValue.forEach((item, index) => {\r\n                                _diff(item, preValue[index], (path == '' ? '' : path + \".\") + key + '[' + index + ']', result)\r\n                            })\r\n                        }\r\n                    }\r\n                } else if (currentType == OBJECTTYPE) {\r\n                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {\r\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue)\r\n                    } else {\r\n                        for (let subKey in currentValue) {\r\n                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + \".\") + key + '.' + subKey, result)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } else if (rootCurrentType == ARRAYTYPE) {\r\n        if (rootPreType != ARRAYTYPE) {\r\n            setResult(result, path, current)\r\n        } else {\r\n            if (current.length < pre.length) {\r\n                setResult(result, path, current)\r\n            } else {\r\n                current.forEach((item, index) => {\r\n                    _diff(item, pre[index], path + '[' + index + ']', result)\r\n                })\r\n            }\r\n        }\r\n    } else {\r\n        setResult(result, path, current)\r\n    }\r\n}\r\n\r\nfunction setResult(result, k, v) {\r\n    if (type(v) != FUNCTIONTYPE) {\r\n        result[k] = v\r\n    }\r\n}\r\n\r\nfunction type(obj) {\r\n    return Object.prototype.toString.call(obj)\r\n}","import { cssToDom, nProps } from './util'\r\nimport { diff } from './vdom/diff'\r\nimport options from './options'\r\n\r\nexport default class WeElement extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.props =  nProps(this.constructor.props)\r\n\t\tthis.data = this.constructor.data || {}\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t\tthis.store = options.store\r\n\t\tif (this.store){\r\n\t\t\tthis.store.instances.push(this)\r\n\t\t}\r\n\t\tthis.install()\r\n        \r\n\t\tconst shadowRoot = this.attachShadow({ mode: 'open' })\r\n\r\n\t\tthis.css && shadowRoot.appendChild(cssToDom(this.css()))\r\n\t\tthis.host = diff(null, this.render(this.props, (!this.constructor.pure && this.store) ? this.store.data : this.data), {}, false, null, false)\r\n\t\tshadowRoot.appendChild(this.host)\r\n\r\n\t\tthis.installed()\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tthis.uninstall()\r\n\t\tif (this.store) {\r\n\t\t\tfor (let i = 0, len = this.store.instances.length; i < len; i++) {\r\n\t\t\t\tif (this.store.instances[i] === this) {\r\n\t\t\t\t\tthis.store.instances.splice(i, 1)\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tthis.beforeUpdate()\r\n\t\tdiff(this.host, this.render(this.props, (!this.constructor.pure && this.store) ? this.store.data : this.data))\r\n\t\tthis.afterUpdate()\r\n\t}\r\n\r\n\tfire(name, data){\r\n\t\tthis.dispatchEvent(new CustomEvent(name, { detail : data }))\r\n\t}\r\n\r\n\tinstall() {\r\n\r\n\t}\r\n\r\n\tinstalled() {\r\n\r\n\t}\r\n\r\n\tuninstall() {\r\n\r\n\t}\r\n\r\n\tbeforeUpdate() {\r\n\r\n\t}\r\n\r\n\tafterUpdate() {\r\n\r\n\t}\r\n}\r\n","import { diff } from './vdom/diff'\r\nimport options from './options'\r\nimport jsonDiff from './json-diff'\r\n\r\nexport function render(vnode, parent, store) {\r\n\tparent = typeof parent === 'string' ? document.querySelector(parent) : parent\r\n\tif(store){\r\n\t\tstore.instances = []\r\n\t\textendStoreUpate(store)\r\n\t\toptions.store = store\r\n\t\tstore.originData = JSON.parse(JSON.stringify(store.data))\t\r\n\t}\r\n    diff(null, vnode, {}, false, parent, false)\r\n    \r\n    if(store){\r\n        requestIdleCallback(execTask)\r\n    }\r\n      \r\n    function execTask(deadline){\r\n        while (deadline.timeRemaining() > 0){\r\n            store.update()\r\n        }\r\n        setTimeout(function(){\r\n            requestIdleCallback(execTask)\r\n        },200)\r\n        \r\n    }\r\n} \r\n\r\n\r\n\r\nfunction extendStoreUpate(store){\r\n\tstore.update = function(){\r\n\t\tlet diffResult = jsonDiff(this.data, this.originData)\r\n\t\tif (Object.keys(diffResult)[0] == '') {\r\n\t\t\tdiffResult = diffResult['']\r\n\t\t}\r\n\t\tconst updateAll = matchGlobalData(this.globalData, diffResult)\r\n\t\tif (Object.keys(diffResult).length > 0) {\r\n\t\t\tthis.instances.forEach(instance => {\r\n\t\t\t\tif(updateAll || this.updateAll || instance.constructor.updatePath && needUpdate(diffResult, instance.constructor.updatePath)){\r\n\t\t\t\t\tinstance.update()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.onChange && this.onChange(diffResult)\r\n\t\t\tfor (let key in diffResult) {\r\n\t\t\t\tupdateByPath(this.originData, key, typeof diffResult[key] === 'object' ? JSON.parse(JSON.stringify(diffResult[key])) : diffResult[key])\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction matchGlobalData(globalData, diffResult) {\r\n\tif(!globalData) return false\r\n    for (let keyA in diffResult) {\r\n        if (globalData.indexOf(keyA) > -1) {\r\n            return true\r\n        }\r\n        for (let i = 0, len = globalData.length; i < len; i++) {\r\n            if (includePath(keyA, globalData[i])) {\r\n                return true\r\n            }\r\n        }\r\n    }\r\n    return false\r\n}\r\n//todo path级别检测包括Array，如果array为空数组，默认值在install里加\r\nfunction needUpdate(diffResult, updatePath){\r\n    for(let keyA in diffResult){\r\n        if(updatePath[keyA]){\r\n            return true\r\n        }\r\n        for(let keyB in updatePath){\r\n            if(includePath(keyA, keyB)){\r\n                return true\r\n            }\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nfunction includePath(pathA, pathB){\r\n    if(pathA.indexOf(pathB)===0){\r\n        const next = pathA.substr(pathB.length, 1)\r\n        if(next === '['||next === '.'){\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nfunction updateByPath(origin, path, value) {\r\n    const arr = path.replace(/]/g, '').replace(/\\[/g, '.').split('.')\r\n    let current = origin\r\n    for (let i = 0, len = arr.length; i < len; i++) {\r\n        if (i === len - 1) {\r\n            current[arr[i]] = value\r\n        } else {\r\n            current = current[arr[i]]\r\n        }\r\n    }\r\n}","const OBJECTTYPE = '[object Object]'\r\nconst ARRAYTYPE = '[object Array]'\r\n\r\nexport function define(name, ctor) {\r\n\tcustomElements.define(name, ctor)\r\n\tif (ctor.data && !ctor.pure) {\r\n\t\tctor.updatePath = getUpdatePath(ctor.data)\r\n\t}\r\n}\r\n\r\nexport function getUpdatePath(data) {\r\n\tconst result = {}\r\n\tdataToPath(data, result)\r\n\treturn result\r\n}\r\n\r\nfunction dataToPath(data, result) {\r\n\tObject.keys(data).forEach(key => {\r\n\t\tresult[key] = true\r\n\t\tconst type = Object.prototype.toString.call(data[key])\r\n\t\tif (type === OBJECTTYPE) {\r\n\t\t\t_objToPath(data[key], key, result)\r\n\t\t} else if (type === ARRAYTYPE) {\r\n\t\t\t_arrayToPath(data[key], key, result)\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction _objToPath(data, path, result) {\r\n\tObject.keys(data).forEach(key => {\r\n\t\tresult[path + '.' + key] = true\r\n\t\tdelete result[path]\r\n\t\tconst type = Object.prototype.toString.call(data[key])\r\n\t\tif (type === OBJECTTYPE) {\r\n\t\t\t_objToPath(data[key], path + '.' + key, result)\r\n\t\t} else if (type === ARRAYTYPE) {\r\n\t\t\t_arrayToPath(data[key], path + '.' + key, result)\r\n\t\t}\r\n\t})\r\n}\r\n\r\nfunction _arrayToPath(data, path, result) {\r\n\tdata.forEach((item, index) => {\r\n\t\tresult[path + '[' + index + ']'] = true\r\n\t\tdelete result[path]\r\n\t\tconst type = Object.prototype.toString.call(item)\r\n\t\tif (type === OBJECTTYPE) {\r\n\t\t\t_objToPath(item, path + '[' + index + ']', result)\r\n\t\t} else if (type === ARRAYTYPE) {\r\n\t\t\t_arrayToPath(item, path + '[' + index + ']', result)\r\n\t\t}\r\n\t})\r\n}","function getGlobal() {\r\n\tif (typeof global !== 'object' || !global || global.Math !== Math || global.Array !== Array) {\r\n\t\tif (typeof self !== 'undefined') {\r\n\t\t\treturn self\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\treturn window\r\n\t\t} else if (typeof global !== 'undefined') {\r\n\t\t\treturn global\r\n\t\t}\r\n\t\treturn (function(){\r\n\t\t\treturn this\r\n\t\t})()\r\n\t\t\r\n\t}\r\n\treturn global\r\n}\r\n\r\n/** Global options\r\n *\t@public\r\n *\t@namespace options {Object}\r\n */\r\nexport default {\r\n\r\n\tstore: null,\r\n\t\r\n\troot: getGlobal()\r\n\t//componentChange(component, element) { },\r\n\t/** If `true`, `prop` changes trigger synchronous component updates.\r\n\t *\t@name syncComponentUpdates\r\n\t *\t@type Boolean\r\n\t *\t@default true\r\n\t */\r\n\t//syncComponentUpdates: true,\r\n\r\n\t/** Processes all created VNodes.\r\n\t *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\r\n\t */\r\n\t//vnode(vnode) { }\r\n\r\n\t/** Hook invoked after a component is mounted. */\r\n\t//afterMount(component) { },\r\n\r\n\t/** Hook invoked after the DOM is updated with a component's latest render. */\r\n\t//afterUpdate(component) { }\r\n\r\n\t/** Hook invoked immediately before a component is unmounted. */\r\n\t// beforeUnmount(component) { }\r\n}\r\n","import { define } from './define'\r\n\r\nexport function tag(name, pure) {\r\n\treturn function (target) {\r\n\t\ttarget.pure = pure\r\n\t\tdefine(name, target)\r\n\t}\r\n}","import { h, h as createElement } from './h'\r\nimport options from './options'\r\nimport WeElement from  './we-element'\r\nimport { render } from './render'\r\nimport { define } from './define'\r\nimport { tag } from './tag'\r\n\r\noptions.root.Omi = {\r\n\ttag,\r\n\tWeElement,\r\n\trender,\r\n\th,\r\n\tcreateElement,\r\n\toptions,\r\n\tdefine\r\n}\r\n\r\noptions.root.Omi.version = '4.0.1'\r\n\r\nexport default {\r\n\ttag,\r\n\tWeElement,\r\n\trender,\r\n\th,\r\n\tcreateElement,\r\n\toptions,\r\n\tdefine\r\n}\r\n\r\nexport {\r\n\ttag,\r\n\tWeElement,\r\n\trender,\r\n\th,\r\n\tcreateElement,\r\n\toptions,\r\n\tdefine\r\n}\r\n"]}